{"version":3,"file":"static/js/951.342cccbe.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.jsx","components/ContactForm/ContactForm.jsx","components/Contacts/ContactsStyled.jsx","components/ContentLoader/ContentLoader.jsx","components/ContactTemplate/ContactTemplateStyled.jsx","components/ContactTemplate/ContactTemplate.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPageStyled.jsx","components/ContactFilter/ContactFilterStyled.jsx","components/ContactFilter/ContactFilter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  width: 300px;\n  height: 150px;\n  margin-left: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border: solid 2px black;\n  padding: 5px;\n`;\n\nexport const StyledFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFormInput = styled.input`\n  width: 150px;\n`;\n\nexport const StyledFormBtn = styled.button`\n  width: 150px;\n  &:hover {\n    box-shadow: 0 0 5px blue;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  StyledForm,\n  StyledFormLabel,\n  StyledFormInput,\n  StyledFormBtn,\n} from './ContactFormStyled';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/services/contactApi';\n\nexport const ContactForm = () => {\n  const [number, setNumber] = useState('');\n  const [name, setName] = useState('');\n\n  const [addContact] = useAddContactMutation();\n\n  const { data = [] } = useFetchContactsQuery();\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formattedName = name.toLowerCase();\n    const isNewContact = data.every(\n      contact => contact.name.toLowerCase() !== formattedName\n    );\n\n    if (!isNewContact) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    addContact({ name, number });\n\n    clear();\n  };\n\n  const clear = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledFormLabel>\n        Name\n        <StyledFormInput\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n          value={name}\n        />\n      </StyledFormLabel>\n      <StyledFormLabel>\n        Number\n        <StyledFormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n          value={number}\n        />\n      </StyledFormLabel>\n      <StyledFormBtn type=\"submit\">Add contact</StyledFormBtn>\n    </StyledForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledContactWraper = styled.div`\n  list-style: none;\n  width: 600px;\n  margin-left: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  margin-left: 70px;\n\n  padding: 5px;\n`;\n","const { Hourglass } = require('react-loader-spinner');\n\nconst ContentLoader = () => {\n  return (\n    <Hourglass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"hourglass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      colors={['#306cce', '#72a1ed']}\n    />\n  );\n};\n\nexport default ContentLoader;\n","import styled from 'styled-components';\nexport const StyledContacts = styled.li`\n  padding-top: 5px;\n  width: 785px;\n  display: flex;\n  justify-content: space-between;\n  padding-top: 20px;\n  align-items: center;\n`;\n\nexport const StyledButton = styled.button`\n  background-color: #7ac7eb;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  font-size: 16px;\n  border-radius: 8px;\n  height: 15px;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 5px blue;\n  }\n`;\n\nexport const StyledName = styled.span`\n  color: #000000;\n`;\n\nexport const StyledNumber = styled.span`\n  padding-left: 10px;\n  color: #756060;\n`;\n","import {\n  StyledContacts,\n  StyledButton,\n  StyledName,\n  StyledNumber,\n} from './ContactTemplateStyled';\nimport { useDeleteContactMutation } from 'redux/services/contactApi';\n\nexport const ContactTemplate = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <StyledContacts>\n      <StyledName>{name}: </StyledName>\n      <StyledNumber>{number} </StyledNumber>\n      <StyledButton\n        onClick={() => {\n          deleteContact({ id, name });\n        }}\n      >\n        Delete\n      </StyledButton>\n    </StyledContacts>\n  );\n};\n","import { StyledContactList, StyledContactWraper } from './ContactsStyled';\nimport { useSelector } from 'react-redux';\nimport { getFilter, getIsLoading } from '../../redux/auth/selectors';\nimport ContentLoader from '../ContentLoader/ContentLoader';\nimport { useFetchContactsQuery } from 'redux/services/contactApi';\nimport { ContactTemplate } from 'components/ContactTemplate/ContactTemplate';\n\nexport const Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  const filter = useSelector(getFilter);\n  const { data = [] } = useFetchContactsQuery();\n\n  const formattedFilter = filter.toLowerCase();\n  const filteredContacts = data.filter(contact =>\n    contact.name.toLowerCase().includes(formattedFilter)\n  );\n  return (\n    <StyledContactWraper>\n      <StyledContactList>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactTemplate key={id} name={name} number={number} id={id} />\n        ))}\n\n        {isLoading && <ContentLoader />}\n      </StyledContactList>\n    </StyledContactWraper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContac = styled.h2`\n  margin-left: 50px;\n  color: #7ac7eb;\n`;\n\nexport const StyledTitel = styled.h1`\n  margin-left: 50px;\n  color: #7ac7eb;\n`;\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.label`\n  width: 500px;\n  display: flex;\n  justify-content: space-around;\n`;","import { StyledFilter } from './ContactFilterStyled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/auth/selectors';\nimport { SelectFilter } from 'redux/filter/filterSlice';\n\nexport const ContactFilter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(SelectFilter(target.value));\n  };\n\n  return (\n    <>\n      <StyledFilter>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          onChange={handleChange}\n          value={filter}\n        />\n      </StyledFilter>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nimport { StyledContac, StyledTitel } from './ContactsPageStyled';\nimport { useSelector } from 'react-redux';\nimport { selectUsername, selectIsLoggedIn } from 'redux/auth/selectors';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\n\nexport default function ContactsPage() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const username = useSelector(selectUsername);\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <div>\n          <StyledTitel>{username} phonebook: </StyledTitel>\n          <ContactForm />\n          <StyledContac>Contacts</StyledContac>\n          <ContactFilter />\n          <Contacts />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","StyledFormLabel","StyledFormInput","StyledFormBtn","ContactForm","useState","number","setNumber","name","setName","useAddContactMutation","addContact","useFetchContactsQuery","data","clear","onSubmit","e","preventDefault","formattedName","toLowerCase","every","contact","alert","type","title","required","onChange","event","target","value","pattern","StyledContactList","StyledContactWraper","Hourglass","require","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","StyledContacts","StyledButton","StyledName","StyledNumber","ContactTemplate","id","useDeleteContactMutation","deleteContact","onClick","Contacts","isLoading","useSelector","getIsLoading","filter","getFilter","formattedFilter","filteredContacts","includes","map","StyledContac","StyledTitel","StyledFilter","ContactFilter","dispatch","useDispatch","SelectFilter","ContactsPage","isLoggedIn","selectIsLoggedIn","username","selectUsername"],"sourceRoot":""}